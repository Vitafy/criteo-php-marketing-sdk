<?php
/**
 * GoogleProductV3
 *
 * PHP version 5
 *
 * @category Class
 * @package  Criteo\Marketing
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Marketing API v.1.0
 *
 * IMPORTANT: This swagger links to Criteo production environment. Any test applied here will thus impact real campaigns.
 *
 * The version of the OpenAPI document: v.1.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.1.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Criteo\Marketing\Model;

use \ArrayAccess;
use \Criteo\Marketing\ObjectSerializer;

/**
 * GoogleProductV3 Class Doc Comment
 *
 * @category Class
 * @package  Criteo\Marketing
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class GoogleProductV3 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'GoogleProductV3';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'offer_id' => 'string',
        'title' => 'string',
        'description' => 'string',
        'link' => 'string',
        'image_link' => 'string',
        'additional_image_links' => 'string[]',
        'content_language' => 'string',
        'target_country' => 'string',
        'channel' => 'string',
        'expiration_date' => 'string',
        'adult' => 'bool',
        'kind' => 'string',
        'brand' => 'string',
        'color' => 'string',
        'google_product_category' => 'string',
        'gtin' => 'string',
        'item_group_id' => 'string',
        'material' => 'string',
        'mpn' => 'string',
        'pattern' => 'string',
        'price' => '\Criteo\Marketing\Model\Price',
        'sale_price' => '\Criteo\Marketing\Model\Price',
        'sale_price_effective_date' => 'string',
        'shipping' => '\Criteo\Marketing\Model\ProductShippingV3[]',
        'shipping_weight' => '\Criteo\Marketing\Model\ProductShippingWeightV3',
        'sizes' => 'string[]',
        'taxes' => '\Criteo\Marketing\Model\ProductTaxV3[]',
        'custom_attributes' => '\Criteo\Marketing\Model\CustomAttributeV3[]',
        'identifier_exists' => 'bool',
        'installment' => '\Criteo\Marketing\Model\InstallmentV3',
        'loyalty_points' => '\Criteo\Marketing\Model\LoyaltyPointsV3',
        'multipack' => 'object',
        'custom_label0' => 'string',
        'custom_label1' => 'string',
        'custom_label2' => 'string',
        'custom_label3' => 'string',
        'custom_label4' => 'string',
        'is_bundle' => 'bool',
        'mobile_link' => 'string',
        'availability_date' => 'string',
        'shipping_label' => 'string',
        'unit_pricing_measure' => '\Criteo\Marketing\Model\UnitMeasure',
        'unit_pricing_base_measure' => '\Criteo\Marketing\Model\ProductUnitPricingBaseMeasureV3',
        'shipping_length' => '\Criteo\Marketing\Model\ProductShippingDimensionV3',
        'shipping_width' => '\Criteo\Marketing\Model\ProductShippingDimensionV3',
        'shipping_height' => '\Criteo\Marketing\Model\ProductShippingDimensionV3',
        'display_ads_id' => 'string',
        'display_ads_similar_ids' => 'string',
        'display_ads_title' => 'string',
        'display_ads_link' => 'string',
        'display_ads_value' => 'double',
        'sell_on_google_quantity' => 'string',
        'promotion_ids' => 'string[]',
        'max_handling_time' => 'string',
        'min_handling_time' => 'string',
        'cost_of_goods_sold' => '\Criteo\Marketing\Model\Price',
        'source' => 'string',
        'included_destinations' => 'string[]',
        'excluded_destinations' => 'string[]',
        'ads_grouping' => 'string',
        'ads_labels' => 'string[]',
        'ads_redirect' => 'string',
        'product_types' => 'string[]',
        'age_group' => 'string',
        'availability' => 'string',
        'condition' => 'string',
        'gender' => 'string',
        'size_system' => 'string',
        'size_type' => 'string',
        'energy_efficiency_class' => 'string',
        'min_energy_efficiency_class' => 'string',
        'max_energy_efficiency_class' => 'string',
        'tax_category' => 'string',
        'transit_time_label' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'id' => null,
        'offer_id' => null,
        'title' => null,
        'description' => null,
        'link' => null,
        'image_link' => null,
        'additional_image_links' => null,
        'content_language' => null,
        'target_country' => null,
        'channel' => null,
        'expiration_date' => null,
        'adult' => null,
        'kind' => null,
        'brand' => null,
        'color' => null,
        'google_product_category' => null,
        'gtin' => null,
        'item_group_id' => null,
        'material' => null,
        'mpn' => null,
        'pattern' => null,
        'price' => null,
        'sale_price' => null,
        'sale_price_effective_date' => null,
        'shipping' => null,
        'shipping_weight' => null,
        'sizes' => null,
        'taxes' => null,
        'custom_attributes' => null,
        'identifier_exists' => null,
        'installment' => null,
        'loyalty_points' => null,
        'multipack' => null,
        'custom_label0' => null,
        'custom_label1' => null,
        'custom_label2' => null,
        'custom_label3' => null,
        'custom_label4' => null,
        'is_bundle' => null,
        'mobile_link' => null,
        'availability_date' => null,
        'shipping_label' => null,
        'unit_pricing_measure' => null,
        'unit_pricing_base_measure' => null,
        'shipping_length' => null,
        'shipping_width' => null,
        'shipping_height' => null,
        'display_ads_id' => null,
        'display_ads_similar_ids' => null,
        'display_ads_title' => null,
        'display_ads_link' => null,
        'display_ads_value' => 'double',
        'sell_on_google_quantity' => null,
        'promotion_ids' => null,
        'max_handling_time' => null,
        'min_handling_time' => null,
        'cost_of_goods_sold' => null,
        'source' => null,
        'included_destinations' => null,
        'excluded_destinations' => null,
        'ads_grouping' => null,
        'ads_labels' => null,
        'ads_redirect' => null,
        'product_types' => null,
        'age_group' => null,
        'availability' => null,
        'condition' => null,
        'gender' => null,
        'size_system' => null,
        'size_type' => null,
        'energy_efficiency_class' => null,
        'min_energy_efficiency_class' => null,
        'max_energy_efficiency_class' => null,
        'tax_category' => null,
        'transit_time_label' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'offer_id' => 'offerId',
        'title' => 'title',
        'description' => 'description',
        'link' => 'link',
        'image_link' => 'imageLink',
        'additional_image_links' => 'additionalImageLinks',
        'content_language' => 'contentLanguage',
        'target_country' => 'targetCountry',
        'channel' => 'channel',
        'expiration_date' => 'expirationDate',
        'adult' => 'adult',
        'kind' => 'kind',
        'brand' => 'brand',
        'color' => 'color',
        'google_product_category' => 'googleProductCategory',
        'gtin' => 'gtin',
        'item_group_id' => 'itemGroupId',
        'material' => 'material',
        'mpn' => 'mpn',
        'pattern' => 'pattern',
        'price' => 'price',
        'sale_price' => 'salePrice',
        'sale_price_effective_date' => 'salePriceEffectiveDate',
        'shipping' => 'shipping',
        'shipping_weight' => 'shippingWeight',
        'sizes' => 'sizes',
        'taxes' => 'taxes',
        'custom_attributes' => 'customAttributes',
        'identifier_exists' => 'identifierExists',
        'installment' => 'installment',
        'loyalty_points' => 'loyaltyPoints',
        'multipack' => 'multipack',
        'custom_label0' => 'customLabel0',
        'custom_label1' => 'customLabel1',
        'custom_label2' => 'customLabel2',
        'custom_label3' => 'customLabel3',
        'custom_label4' => 'customLabel4',
        'is_bundle' => 'isBundle',
        'mobile_link' => 'mobileLink',
        'availability_date' => 'availabilityDate',
        'shipping_label' => 'shippingLabel',
        'unit_pricing_measure' => 'unitPricingMeasure',
        'unit_pricing_base_measure' => 'unitPricingBaseMeasure',
        'shipping_length' => 'shippingLength',
        'shipping_width' => 'shippingWidth',
        'shipping_height' => 'shippingHeight',
        'display_ads_id' => 'displayAdsId',
        'display_ads_similar_ids' => 'displayAdsSimilarIds',
        'display_ads_title' => 'displayAdsTitle',
        'display_ads_link' => 'displayAdsLink',
        'display_ads_value' => 'displayAdsValue',
        'sell_on_google_quantity' => 'sellOnGoogleQuantity',
        'promotion_ids' => 'promotionIds',
        'max_handling_time' => 'maxHandlingTime',
        'min_handling_time' => 'minHandlingTime',
        'cost_of_goods_sold' => 'costOfGoodsSold',
        'source' => 'source',
        'included_destinations' => 'includedDestinations',
        'excluded_destinations' => 'excludedDestinations',
        'ads_grouping' => 'adsGrouping',
        'ads_labels' => 'adsLabels',
        'ads_redirect' => 'adsRedirect',
        'product_types' => 'productTypes',
        'age_group' => 'ageGroup',
        'availability' => 'availability',
        'condition' => 'condition',
        'gender' => 'gender',
        'size_system' => 'sizeSystem',
        'size_type' => 'sizeType',
        'energy_efficiency_class' => 'energyEfficiencyClass',
        'min_energy_efficiency_class' => 'minEnergyEfficiencyClass',
        'max_energy_efficiency_class' => 'maxEnergyEfficiencyClass',
        'tax_category' => 'taxCategory',
        'transit_time_label' => 'transitTimeLabel'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'offer_id' => 'setOfferId',
        'title' => 'setTitle',
        'description' => 'setDescription',
        'link' => 'setLink',
        'image_link' => 'setImageLink',
        'additional_image_links' => 'setAdditionalImageLinks',
        'content_language' => 'setContentLanguage',
        'target_country' => 'setTargetCountry',
        'channel' => 'setChannel',
        'expiration_date' => 'setExpirationDate',
        'adult' => 'setAdult',
        'kind' => 'setKind',
        'brand' => 'setBrand',
        'color' => 'setColor',
        'google_product_category' => 'setGoogleProductCategory',
        'gtin' => 'setGtin',
        'item_group_id' => 'setItemGroupId',
        'material' => 'setMaterial',
        'mpn' => 'setMpn',
        'pattern' => 'setPattern',
        'price' => 'setPrice',
        'sale_price' => 'setSalePrice',
        'sale_price_effective_date' => 'setSalePriceEffectiveDate',
        'shipping' => 'setShipping',
        'shipping_weight' => 'setShippingWeight',
        'sizes' => 'setSizes',
        'taxes' => 'setTaxes',
        'custom_attributes' => 'setCustomAttributes',
        'identifier_exists' => 'setIdentifierExists',
        'installment' => 'setInstallment',
        'loyalty_points' => 'setLoyaltyPoints',
        'multipack' => 'setMultipack',
        'custom_label0' => 'setCustomLabel0',
        'custom_label1' => 'setCustomLabel1',
        'custom_label2' => 'setCustomLabel2',
        'custom_label3' => 'setCustomLabel3',
        'custom_label4' => 'setCustomLabel4',
        'is_bundle' => 'setIsBundle',
        'mobile_link' => 'setMobileLink',
        'availability_date' => 'setAvailabilityDate',
        'shipping_label' => 'setShippingLabel',
        'unit_pricing_measure' => 'setUnitPricingMeasure',
        'unit_pricing_base_measure' => 'setUnitPricingBaseMeasure',
        'shipping_length' => 'setShippingLength',
        'shipping_width' => 'setShippingWidth',
        'shipping_height' => 'setShippingHeight',
        'display_ads_id' => 'setDisplayAdsId',
        'display_ads_similar_ids' => 'setDisplayAdsSimilarIds',
        'display_ads_title' => 'setDisplayAdsTitle',
        'display_ads_link' => 'setDisplayAdsLink',
        'display_ads_value' => 'setDisplayAdsValue',
        'sell_on_google_quantity' => 'setSellOnGoogleQuantity',
        'promotion_ids' => 'setPromotionIds',
        'max_handling_time' => 'setMaxHandlingTime',
        'min_handling_time' => 'setMinHandlingTime',
        'cost_of_goods_sold' => 'setCostOfGoodsSold',
        'source' => 'setSource',
        'included_destinations' => 'setIncludedDestinations',
        'excluded_destinations' => 'setExcludedDestinations',
        'ads_grouping' => 'setAdsGrouping',
        'ads_labels' => 'setAdsLabels',
        'ads_redirect' => 'setAdsRedirect',
        'product_types' => 'setProductTypes',
        'age_group' => 'setAgeGroup',
        'availability' => 'setAvailability',
        'condition' => 'setCondition',
        'gender' => 'setGender',
        'size_system' => 'setSizeSystem',
        'size_type' => 'setSizeType',
        'energy_efficiency_class' => 'setEnergyEfficiencyClass',
        'min_energy_efficiency_class' => 'setMinEnergyEfficiencyClass',
        'max_energy_efficiency_class' => 'setMaxEnergyEfficiencyClass',
        'tax_category' => 'setTaxCategory',
        'transit_time_label' => 'setTransitTimeLabel'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'offer_id' => 'getOfferId',
        'title' => 'getTitle',
        'description' => 'getDescription',
        'link' => 'getLink',
        'image_link' => 'getImageLink',
        'additional_image_links' => 'getAdditionalImageLinks',
        'content_language' => 'getContentLanguage',
        'target_country' => 'getTargetCountry',
        'channel' => 'getChannel',
        'expiration_date' => 'getExpirationDate',
        'adult' => 'getAdult',
        'kind' => 'getKind',
        'brand' => 'getBrand',
        'color' => 'getColor',
        'google_product_category' => 'getGoogleProductCategory',
        'gtin' => 'getGtin',
        'item_group_id' => 'getItemGroupId',
        'material' => 'getMaterial',
        'mpn' => 'getMpn',
        'pattern' => 'getPattern',
        'price' => 'getPrice',
        'sale_price' => 'getSalePrice',
        'sale_price_effective_date' => 'getSalePriceEffectiveDate',
        'shipping' => 'getShipping',
        'shipping_weight' => 'getShippingWeight',
        'sizes' => 'getSizes',
        'taxes' => 'getTaxes',
        'custom_attributes' => 'getCustomAttributes',
        'identifier_exists' => 'getIdentifierExists',
        'installment' => 'getInstallment',
        'loyalty_points' => 'getLoyaltyPoints',
        'multipack' => 'getMultipack',
        'custom_label0' => 'getCustomLabel0',
        'custom_label1' => 'getCustomLabel1',
        'custom_label2' => 'getCustomLabel2',
        'custom_label3' => 'getCustomLabel3',
        'custom_label4' => 'getCustomLabel4',
        'is_bundle' => 'getIsBundle',
        'mobile_link' => 'getMobileLink',
        'availability_date' => 'getAvailabilityDate',
        'shipping_label' => 'getShippingLabel',
        'unit_pricing_measure' => 'getUnitPricingMeasure',
        'unit_pricing_base_measure' => 'getUnitPricingBaseMeasure',
        'shipping_length' => 'getShippingLength',
        'shipping_width' => 'getShippingWidth',
        'shipping_height' => 'getShippingHeight',
        'display_ads_id' => 'getDisplayAdsId',
        'display_ads_similar_ids' => 'getDisplayAdsSimilarIds',
        'display_ads_title' => 'getDisplayAdsTitle',
        'display_ads_link' => 'getDisplayAdsLink',
        'display_ads_value' => 'getDisplayAdsValue',
        'sell_on_google_quantity' => 'getSellOnGoogleQuantity',
        'promotion_ids' => 'getPromotionIds',
        'max_handling_time' => 'getMaxHandlingTime',
        'min_handling_time' => 'getMinHandlingTime',
        'cost_of_goods_sold' => 'getCostOfGoodsSold',
        'source' => 'getSource',
        'included_destinations' => 'getIncludedDestinations',
        'excluded_destinations' => 'getExcludedDestinations',
        'ads_grouping' => 'getAdsGrouping',
        'ads_labels' => 'getAdsLabels',
        'ads_redirect' => 'getAdsRedirect',
        'product_types' => 'getProductTypes',
        'age_group' => 'getAgeGroup',
        'availability' => 'getAvailability',
        'condition' => 'getCondition',
        'gender' => 'getGender',
        'size_system' => 'getSizeSystem',
        'size_type' => 'getSizeType',
        'energy_efficiency_class' => 'getEnergyEfficiencyClass',
        'min_energy_efficiency_class' => 'getMinEnergyEfficiencyClass',
        'max_energy_efficiency_class' => 'getMaxEnergyEfficiencyClass',
        'tax_category' => 'getTaxCategory',
        'transit_time_label' => 'getTransitTimeLabel'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const CHANNEL_ONLINE = 'Online';
    const KIND_CONTENT_PRODUCT = 'ContentProduct';
    const SOURCE_API = 'Api';
    const SOURCE_CRAWL = 'Crawl';
    const SOURCE_FEED = 'Feed';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getChannelAllowableValues()
    {
        return [
            self::CHANNEL_ONLINE,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getKindAllowableValues()
    {
        return [
            self::KIND_CONTENT_PRODUCT,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getSourceAllowableValues()
    {
        return [
            self::SOURCE_API,
            self::SOURCE_CRAWL,
            self::SOURCE_FEED,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['offer_id'] = isset($data['offer_id']) ? $data['offer_id'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['link'] = isset($data['link']) ? $data['link'] : null;
        $this->container['image_link'] = isset($data['image_link']) ? $data['image_link'] : null;
        $this->container['additional_image_links'] = isset($data['additional_image_links']) ? $data['additional_image_links'] : null;
        $this->container['content_language'] = isset($data['content_language']) ? $data['content_language'] : null;
        $this->container['target_country'] = isset($data['target_country']) ? $data['target_country'] : null;
        $this->container['channel'] = isset($data['channel']) ? $data['channel'] : null;
        $this->container['expiration_date'] = isset($data['expiration_date']) ? $data['expiration_date'] : null;
        $this->container['adult'] = isset($data['adult']) ? $data['adult'] : null;
        $this->container['kind'] = isset($data['kind']) ? $data['kind'] : null;
        $this->container['brand'] = isset($data['brand']) ? $data['brand'] : null;
        $this->container['color'] = isset($data['color']) ? $data['color'] : null;
        $this->container['google_product_category'] = isset($data['google_product_category']) ? $data['google_product_category'] : null;
        $this->container['gtin'] = isset($data['gtin']) ? $data['gtin'] : null;
        $this->container['item_group_id'] = isset($data['item_group_id']) ? $data['item_group_id'] : null;
        $this->container['material'] = isset($data['material']) ? $data['material'] : null;
        $this->container['mpn'] = isset($data['mpn']) ? $data['mpn'] : null;
        $this->container['pattern'] = isset($data['pattern']) ? $data['pattern'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['sale_price'] = isset($data['sale_price']) ? $data['sale_price'] : null;
        $this->container['sale_price_effective_date'] = isset($data['sale_price_effective_date']) ? $data['sale_price_effective_date'] : null;
        $this->container['shipping'] = isset($data['shipping']) ? $data['shipping'] : null;
        $this->container['shipping_weight'] = isset($data['shipping_weight']) ? $data['shipping_weight'] : null;
        $this->container['sizes'] = isset($data['sizes']) ? $data['sizes'] : null;
        $this->container['taxes'] = isset($data['taxes']) ? $data['taxes'] : null;
        $this->container['custom_attributes'] = isset($data['custom_attributes']) ? $data['custom_attributes'] : null;
        $this->container['identifier_exists'] = isset($data['identifier_exists']) ? $data['identifier_exists'] : null;
        $this->container['installment'] = isset($data['installment']) ? $data['installment'] : null;
        $this->container['loyalty_points'] = isset($data['loyalty_points']) ? $data['loyalty_points'] : null;
        $this->container['multipack'] = isset($data['multipack']) ? $data['multipack'] : null;
        $this->container['custom_label0'] = isset($data['custom_label0']) ? $data['custom_label0'] : null;
        $this->container['custom_label1'] = isset($data['custom_label1']) ? $data['custom_label1'] : null;
        $this->container['custom_label2'] = isset($data['custom_label2']) ? $data['custom_label2'] : null;
        $this->container['custom_label3'] = isset($data['custom_label3']) ? $data['custom_label3'] : null;
        $this->container['custom_label4'] = isset($data['custom_label4']) ? $data['custom_label4'] : null;
        $this->container['is_bundle'] = isset($data['is_bundle']) ? $data['is_bundle'] : null;
        $this->container['mobile_link'] = isset($data['mobile_link']) ? $data['mobile_link'] : null;
        $this->container['availability_date'] = isset($data['availability_date']) ? $data['availability_date'] : null;
        $this->container['shipping_label'] = isset($data['shipping_label']) ? $data['shipping_label'] : null;
        $this->container['unit_pricing_measure'] = isset($data['unit_pricing_measure']) ? $data['unit_pricing_measure'] : null;
        $this->container['unit_pricing_base_measure'] = isset($data['unit_pricing_base_measure']) ? $data['unit_pricing_base_measure'] : null;
        $this->container['shipping_length'] = isset($data['shipping_length']) ? $data['shipping_length'] : null;
        $this->container['shipping_width'] = isset($data['shipping_width']) ? $data['shipping_width'] : null;
        $this->container['shipping_height'] = isset($data['shipping_height']) ? $data['shipping_height'] : null;
        $this->container['display_ads_id'] = isset($data['display_ads_id']) ? $data['display_ads_id'] : null;
        $this->container['display_ads_similar_ids'] = isset($data['display_ads_similar_ids']) ? $data['display_ads_similar_ids'] : null;
        $this->container['display_ads_title'] = isset($data['display_ads_title']) ? $data['display_ads_title'] : null;
        $this->container['display_ads_link'] = isset($data['display_ads_link']) ? $data['display_ads_link'] : null;
        $this->container['display_ads_value'] = isset($data['display_ads_value']) ? $data['display_ads_value'] : null;
        $this->container['sell_on_google_quantity'] = isset($data['sell_on_google_quantity']) ? $data['sell_on_google_quantity'] : null;
        $this->container['promotion_ids'] = isset($data['promotion_ids']) ? $data['promotion_ids'] : null;
        $this->container['max_handling_time'] = isset($data['max_handling_time']) ? $data['max_handling_time'] : null;
        $this->container['min_handling_time'] = isset($data['min_handling_time']) ? $data['min_handling_time'] : null;
        $this->container['cost_of_goods_sold'] = isset($data['cost_of_goods_sold']) ? $data['cost_of_goods_sold'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['included_destinations'] = isset($data['included_destinations']) ? $data['included_destinations'] : null;
        $this->container['excluded_destinations'] = isset($data['excluded_destinations']) ? $data['excluded_destinations'] : null;
        $this->container['ads_grouping'] = isset($data['ads_grouping']) ? $data['ads_grouping'] : null;
        $this->container['ads_labels'] = isset($data['ads_labels']) ? $data['ads_labels'] : null;
        $this->container['ads_redirect'] = isset($data['ads_redirect']) ? $data['ads_redirect'] : null;
        $this->container['product_types'] = isset($data['product_types']) ? $data['product_types'] : null;
        $this->container['age_group'] = isset($data['age_group']) ? $data['age_group'] : null;
        $this->container['availability'] = isset($data['availability']) ? $data['availability'] : null;
        $this->container['condition'] = isset($data['condition']) ? $data['condition'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['size_system'] = isset($data['size_system']) ? $data['size_system'] : null;
        $this->container['size_type'] = isset($data['size_type']) ? $data['size_type'] : null;
        $this->container['energy_efficiency_class'] = isset($data['energy_efficiency_class']) ? $data['energy_efficiency_class'] : null;
        $this->container['min_energy_efficiency_class'] = isset($data['min_energy_efficiency_class']) ? $data['min_energy_efficiency_class'] : null;
        $this->container['max_energy_efficiency_class'] = isset($data['max_energy_efficiency_class']) ? $data['max_energy_efficiency_class'] : null;
        $this->container['tax_category'] = isset($data['tax_category']) ? $data['tax_category'] : null;
        $this->container['transit_time_label'] = isset($data['transit_time_label']) ? $data['transit_time_label'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getChannelAllowableValues();
        if (!is_null($this->container['channel']) && !in_array($this->container['channel'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'channel', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getKindAllowableValues();
        if (!is_null($this->container['kind']) && !in_array($this->container['kind'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'kind', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getSourceAllowableValues();
        if (!is_null($this->container['source']) && !in_array($this->container['source'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'source', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id A unique identifier for the item.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets offer_id
     *
     * @return string|null
     */
    public function getOfferId()
    {
        return $this->container['offer_id'];
    }

    /**
     * Sets offer_id
     *
     * @param string|null $offer_id Not used by Criteo.
     *
     * @return $this
     */
    public function setOfferId($offer_id)
    {
        $this->container['offer_id'] = $offer_id;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title Title of the item.
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description Description of the item.
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets link
     *
     * @return string|null
     */
    public function getLink()
    {
        return $this->container['link'];
    }

    /**
     * Sets link
     *
     * @param string|null $link URL directly linking to your item's page on your website.
     *
     * @return $this
     */
    public function setLink($link)
    {
        $this->container['link'] = $link;

        return $this;
    }

    /**
     * Gets image_link
     *
     * @return string|null
     */
    public function getImageLink()
    {
        return $this->container['image_link'];
    }

    /**
     * Sets image_link
     *
     * @param string|null $image_link URL of an image of the item.
     *
     * @return $this
     */
    public function setImageLink($image_link)
    {
        $this->container['image_link'] = $image_link;

        return $this;
    }

    /**
     * Gets additional_image_links
     *
     * @return string[]|null
     */
    public function getAdditionalImageLinks()
    {
        return $this->container['additional_image_links'];
    }

    /**
     * Sets additional_image_links
     *
     * @param string[]|null $additional_image_links Additional URLs of images of the item.
     *
     * @return $this
     */
    public function setAdditionalImageLinks($additional_image_links)
    {
        $this->container['additional_image_links'] = $additional_image_links;

        return $this;
    }

    /**
     * Gets content_language
     *
     * @return string|null
     */
    public function getContentLanguage()
    {
        return $this->container['content_language'];
    }

    /**
     * Sets content_language
     *
     * @param string|null $content_language The two-letter ISO 639-1 language code for the item.
     *
     * @return $this
     */
    public function setContentLanguage($content_language)
    {
        $this->container['content_language'] = $content_language;

        return $this;
    }

    /**
     * Gets target_country
     *
     * @return string|null
     */
    public function getTargetCountry()
    {
        return $this->container['target_country'];
    }

    /**
     * Sets target_country
     *
     * @param string|null $target_country The CLDR territory code for the item.
     *
     * @return $this
     */
    public function setTargetCountry($target_country)
    {
        $this->container['target_country'] = $target_country;

        return $this;
    }

    /**
     * Gets channel
     *
     * @return string|null
     */
    public function getChannel()
    {
        return $this->container['channel'];
    }

    /**
     * Sets channel
     *
     * @param string|null $channel The item's channel (online only).
     *
     * @return $this
     */
    public function setChannel($channel)
    {
        $allowedValues = $this->getChannelAllowableValues();
        if (!is_null($channel) && !in_array($channel, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'channel', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['channel'] = $channel;

        return $this;
    }

    /**
     * Gets expiration_date
     *
     * @return string|null
     */
    public function getExpirationDate()
    {
        return $this->container['expiration_date'];
    }

    /**
     * Sets expiration_date
     *
     * @param string|null $expiration_date Date on which the item should expire, as specified upon insertion, in ISO 8601 format.
     *
     * @return $this
     */
    public function setExpirationDate($expiration_date)
    {
        $this->container['expiration_date'] = $expiration_date;

        return $this;
    }

    /**
     * Gets adult
     *
     * @return bool|null
     */
    public function getAdult()
    {
        return $this->container['adult'];
    }

    /**
     * Sets adult
     *
     * @param bool|null $adult Set to true if the item is targeted towards adults.
     *
     * @return $this
     */
    public function setAdult($adult)
    {
        $this->container['adult'] = $adult;

        return $this;
    }

    /**
     * Gets kind
     *
     * @return string|null
     */
    public function getKind()
    {
        return $this->container['kind'];
    }

    /**
     * Sets kind
     *
     * @param string|null $kind Identifies what kind of resource this is.
     *
     * @return $this
     */
    public function setKind($kind)
    {
        $allowedValues = $this->getKindAllowableValues();
        if (!is_null($kind) && !in_array($kind, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'kind', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['kind'] = $kind;

        return $this;
    }

    /**
     * Gets brand
     *
     * @return string|null
     */
    public function getBrand()
    {
        return $this->container['brand'];
    }

    /**
     * Sets brand
     *
     * @param string|null $brand Brand of the item.
     *
     * @return $this
     */
    public function setBrand($brand)
    {
        $this->container['brand'] = $brand;

        return $this;
    }

    /**
     * Gets color
     *
     * @return string|null
     */
    public function getColor()
    {
        return $this->container['color'];
    }

    /**
     * Sets color
     *
     * @param string|null $color Color of the item.
     *
     * @return $this
     */
    public function setColor($color)
    {
        $this->container['color'] = $color;

        return $this;
    }

    /**
     * Gets google_product_category
     *
     * @return string|null
     */
    public function getGoogleProductCategory()
    {
        return $this->container['google_product_category'];
    }

    /**
     * Sets google_product_category
     *
     * @param string|null $google_product_category Google's category of the item (see Google product taxonomy).
     *
     * @return $this
     */
    public function setGoogleProductCategory($google_product_category)
    {
        $this->container['google_product_category'] = $google_product_category;

        return $this;
    }

    /**
     * Gets gtin
     *
     * @return string|null
     */
    public function getGtin()
    {
        return $this->container['gtin'];
    }

    /**
     * Sets gtin
     *
     * @param string|null $gtin Global Trade Item Number (GTIN) of the item.
     *
     * @return $this
     */
    public function setGtin($gtin)
    {
        $this->container['gtin'] = $gtin;

        return $this;
    }

    /**
     * Gets item_group_id
     *
     * @return string|null
     */
    public function getItemGroupId()
    {
        return $this->container['item_group_id'];
    }

    /**
     * Sets item_group_id
     *
     * @param string|null $item_group_id Shared identifier for all variants of the same product.
     *
     * @return $this
     */
    public function setItemGroupId($item_group_id)
    {
        $this->container['item_group_id'] = $item_group_id;

        return $this;
    }

    /**
     * Gets material
     *
     * @return string|null
     */
    public function getMaterial()
    {
        return $this->container['material'];
    }

    /**
     * Sets material
     *
     * @param string|null $material The material of which the item is made.
     *
     * @return $this
     */
    public function setMaterial($material)
    {
        $this->container['material'] = $material;

        return $this;
    }

    /**
     * Gets mpn
     *
     * @return string|null
     */
    public function getMpn()
    {
        return $this->container['mpn'];
    }

    /**
     * Sets mpn
     *
     * @param string|null $mpn Manufacturer Part Number (MPN) of the item.
     *
     * @return $this
     */
    public function setMpn($mpn)
    {
        $this->container['mpn'] = $mpn;

        return $this;
    }

    /**
     * Gets pattern
     *
     * @return string|null
     */
    public function getPattern()
    {
        return $this->container['pattern'];
    }

    /**
     * Sets pattern
     *
     * @param string|null $pattern The item's pattern (e.g. polka dots).
     *
     * @return $this
     */
    public function setPattern($pattern)
    {
        $this->container['pattern'] = $pattern;

        return $this;
    }

    /**
     * Gets price
     *
     * @return \Criteo\Marketing\Model\Price|null
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param \Criteo\Marketing\Model\Price|null $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets sale_price
     *
     * @return \Criteo\Marketing\Model\Price|null
     */
    public function getSalePrice()
    {
        return $this->container['sale_price'];
    }

    /**
     * Sets sale_price
     *
     * @param \Criteo\Marketing\Model\Price|null $sale_price sale_price
     *
     * @return $this
     */
    public function setSalePrice($sale_price)
    {
        $this->container['sale_price'] = $sale_price;

        return $this;
    }

    /**
     * Gets sale_price_effective_date
     *
     * @return string|null
     */
    public function getSalePriceEffectiveDate()
    {
        return $this->container['sale_price_effective_date'];
    }

    /**
     * Sets sale_price_effective_date
     *
     * @param string|null $sale_price_effective_date Date range during which the item is on sale.
     *
     * @return $this
     */
    public function setSalePriceEffectiveDate($sale_price_effective_date)
    {
        $this->container['sale_price_effective_date'] = $sale_price_effective_date;

        return $this;
    }

    /**
     * Gets shipping
     *
     * @return \Criteo\Marketing\Model\ProductShippingV3[]|null
     */
    public function getShipping()
    {
        return $this->container['shipping'];
    }

    /**
     * Sets shipping
     *
     * @param \Criteo\Marketing\Model\ProductShippingV3[]|null $shipping Shipping rules.
     *
     * @return $this
     */
    public function setShipping($shipping)
    {
        $this->container['shipping'] = $shipping;

        return $this;
    }

    /**
     * Gets shipping_weight
     *
     * @return \Criteo\Marketing\Model\ProductShippingWeightV3|null
     */
    public function getShippingWeight()
    {
        return $this->container['shipping_weight'];
    }

    /**
     * Sets shipping_weight
     *
     * @param \Criteo\Marketing\Model\ProductShippingWeightV3|null $shipping_weight shipping_weight
     *
     * @return $this
     */
    public function setShippingWeight($shipping_weight)
    {
        $this->container['shipping_weight'] = $shipping_weight;

        return $this;
    }

    /**
     * Gets sizes
     *
     * @return string[]|null
     */
    public function getSizes()
    {
        return $this->container['sizes'];
    }

    /**
     * Sets sizes
     *
     * @param string[]|null $sizes Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value.
     *
     * @return $this
     */
    public function setSizes($sizes)
    {
        $this->container['sizes'] = $sizes;

        return $this;
    }

    /**
     * Gets taxes
     *
     * @return \Criteo\Marketing\Model\ProductTaxV3[]|null
     */
    public function getTaxes()
    {
        return $this->container['taxes'];
    }

    /**
     * Sets taxes
     *
     * @param \Criteo\Marketing\Model\ProductTaxV3[]|null $taxes Tax information.
     *
     * @return $this
     */
    public function setTaxes($taxes)
    {
        $this->container['taxes'] = $taxes;

        return $this;
    }

    /**
     * Gets custom_attributes
     *
     * @return \Criteo\Marketing\Model\CustomAttributeV3[]|null
     */
    public function getCustomAttributes()
    {
        return $this->container['custom_attributes'];
    }

    /**
     * Sets custom_attributes
     *
     * @param \Criteo\Marketing\Model\CustomAttributeV3[]|null $custom_attributes A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., { \"name\": \"size type\", \"value\": \"regular\" }). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Shopping Actions.
     *
     * @return $this
     */
    public function setCustomAttributes($custom_attributes)
    {
        $this->container['custom_attributes'] = $custom_attributes;

        return $this;
    }

    /**
     * Gets identifier_exists
     *
     * @return bool|null
     */
    public function getIdentifierExists()
    {
        return $this->container['identifier_exists'];
    }

    /**
     * Sets identifier_exists
     *
     * @param bool|null $identifier_exists False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.
     *
     * @return $this
     */
    public function setIdentifierExists($identifier_exists)
    {
        $this->container['identifier_exists'] = $identifier_exists;

        return $this;
    }

    /**
     * Gets installment
     *
     * @return \Criteo\Marketing\Model\InstallmentV3|null
     */
    public function getInstallment()
    {
        return $this->container['installment'];
    }

    /**
     * Sets installment
     *
     * @param \Criteo\Marketing\Model\InstallmentV3|null $installment installment
     *
     * @return $this
     */
    public function setInstallment($installment)
    {
        $this->container['installment'] = $installment;

        return $this;
    }

    /**
     * Gets loyalty_points
     *
     * @return \Criteo\Marketing\Model\LoyaltyPointsV3|null
     */
    public function getLoyaltyPoints()
    {
        return $this->container['loyalty_points'];
    }

    /**
     * Sets loyalty_points
     *
     * @param \Criteo\Marketing\Model\LoyaltyPointsV3|null $loyalty_points loyalty_points
     *
     * @return $this
     */
    public function setLoyaltyPoints($loyalty_points)
    {
        $this->container['loyalty_points'] = $loyalty_points;

        return $this;
    }

    /**
     * Gets multipack
     *
     * @return object|null
     */
    public function getMultipack()
    {
        return $this->container['multipack'];
    }

    /**
     * Sets multipack
     *
     * @param object|null $multipack The number of identical products in a merchant-defined multipack. To avoid any overflow issue, pass it as a string.
     *
     * @return $this
     */
    public function setMultipack($multipack)
    {
        $this->container['multipack'] = $multipack;

        return $this;
    }

    /**
     * Gets custom_label0
     *
     * @return string|null
     */
    public function getCustomLabel0()
    {
        return $this->container['custom_label0'];
    }

    /**
     * Sets custom_label0
     *
     * @param string|null $custom_label0 Custom label 0 for custom grouping of items in a Shopping campaign.
     *
     * @return $this
     */
    public function setCustomLabel0($custom_label0)
    {
        $this->container['custom_label0'] = $custom_label0;

        return $this;
    }

    /**
     * Gets custom_label1
     *
     * @return string|null
     */
    public function getCustomLabel1()
    {
        return $this->container['custom_label1'];
    }

    /**
     * Sets custom_label1
     *
     * @param string|null $custom_label1 Custom label 1 for custom grouping of items in a Shopping campaign.
     *
     * @return $this
     */
    public function setCustomLabel1($custom_label1)
    {
        $this->container['custom_label1'] = $custom_label1;

        return $this;
    }

    /**
     * Gets custom_label2
     *
     * @return string|null
     */
    public function getCustomLabel2()
    {
        return $this->container['custom_label2'];
    }

    /**
     * Sets custom_label2
     *
     * @param string|null $custom_label2 Custom label 2 for custom grouping of items in a Shopping campaign.
     *
     * @return $this
     */
    public function setCustomLabel2($custom_label2)
    {
        $this->container['custom_label2'] = $custom_label2;

        return $this;
    }

    /**
     * Gets custom_label3
     *
     * @return string|null
     */
    public function getCustomLabel3()
    {
        return $this->container['custom_label3'];
    }

    /**
     * Sets custom_label3
     *
     * @param string|null $custom_label3 Custom label 3 for custom grouping of items in a Shopping campaign.
     *
     * @return $this
     */
    public function setCustomLabel3($custom_label3)
    {
        $this->container['custom_label3'] = $custom_label3;

        return $this;
    }

    /**
     * Gets custom_label4
     *
     * @return string|null
     */
    public function getCustomLabel4()
    {
        return $this->container['custom_label4'];
    }

    /**
     * Sets custom_label4
     *
     * @param string|null $custom_label4 Custom label 4 for custom grouping of items in a Shopping campaign.
     *
     * @return $this
     */
    public function setCustomLabel4($custom_label4)
    {
        $this->container['custom_label4'] = $custom_label4;

        return $this;
    }

    /**
     * Gets is_bundle
     *
     * @return bool|null
     */
    public function getIsBundle()
    {
        return $this->container['is_bundle'];
    }

    /**
     * Sets is_bundle
     *
     * @param bool|null $is_bundle Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.
     *
     * @return $this
     */
    public function setIsBundle($is_bundle)
    {
        $this->container['is_bundle'] = $is_bundle;

        return $this;
    }

    /**
     * Gets mobile_link
     *
     * @return string|null
     */
    public function getMobileLink()
    {
        return $this->container['mobile_link'];
    }

    /**
     * Sets mobile_link
     *
     * @param string|null $mobile_link accounts.link to a mobile-optimized version of the landing page.
     *
     * @return $this
     */
    public function setMobileLink($mobile_link)
    {
        $this->container['mobile_link'] = $mobile_link;

        return $this;
    }

    /**
     * Gets availability_date
     *
     * @return string|null
     */
    public function getAvailabilityDate()
    {
        return $this->container['availability_date'];
    }

    /**
     * Sets availability_date
     *
     * @param string|null $availability_date The day a pre-ordered product becomes available for delivery, in ISO 8601 format.
     *
     * @return $this
     */
    public function setAvailabilityDate($availability_date)
    {
        $this->container['availability_date'] = $availability_date;

        return $this;
    }

    /**
     * Gets shipping_label
     *
     * @return string|null
     */
    public function getShippingLabel()
    {
        return $this->container['shipping_label'];
    }

    /**
     * Sets shipping_label
     *
     * @param string|null $shipping_label The shipping label of the product, used to group product in account-level shipping rules.
     *
     * @return $this
     */
    public function setShippingLabel($shipping_label)
    {
        $this->container['shipping_label'] = $shipping_label;

        return $this;
    }

    /**
     * Gets unit_pricing_measure
     *
     * @return \Criteo\Marketing\Model\UnitMeasure|null
     */
    public function getUnitPricingMeasure()
    {
        return $this->container['unit_pricing_measure'];
    }

    /**
     * Sets unit_pricing_measure
     *
     * @param \Criteo\Marketing\Model\UnitMeasure|null $unit_pricing_measure unit_pricing_measure
     *
     * @return $this
     */
    public function setUnitPricingMeasure($unit_pricing_measure)
    {
        $this->container['unit_pricing_measure'] = $unit_pricing_measure;

        return $this;
    }

    /**
     * Gets unit_pricing_base_measure
     *
     * @return \Criteo\Marketing\Model\ProductUnitPricingBaseMeasureV3|null
     */
    public function getUnitPricingBaseMeasure()
    {
        return $this->container['unit_pricing_base_measure'];
    }

    /**
     * Sets unit_pricing_base_measure
     *
     * @param \Criteo\Marketing\Model\ProductUnitPricingBaseMeasureV3|null $unit_pricing_base_measure unit_pricing_base_measure
     *
     * @return $this
     */
    public function setUnitPricingBaseMeasure($unit_pricing_base_measure)
    {
        $this->container['unit_pricing_base_measure'] = $unit_pricing_base_measure;

        return $this;
    }

    /**
     * Gets shipping_length
     *
     * @return \Criteo\Marketing\Model\ProductShippingDimensionV3|null
     */
    public function getShippingLength()
    {
        return $this->container['shipping_length'];
    }

    /**
     * Sets shipping_length
     *
     * @param \Criteo\Marketing\Model\ProductShippingDimensionV3|null $shipping_length shipping_length
     *
     * @return $this
     */
    public function setShippingLength($shipping_length)
    {
        $this->container['shipping_length'] = $shipping_length;

        return $this;
    }

    /**
     * Gets shipping_width
     *
     * @return \Criteo\Marketing\Model\ProductShippingDimensionV3|null
     */
    public function getShippingWidth()
    {
        return $this->container['shipping_width'];
    }

    /**
     * Sets shipping_width
     *
     * @param \Criteo\Marketing\Model\ProductShippingDimensionV3|null $shipping_width shipping_width
     *
     * @return $this
     */
    public function setShippingWidth($shipping_width)
    {
        $this->container['shipping_width'] = $shipping_width;

        return $this;
    }

    /**
     * Gets shipping_height
     *
     * @return \Criteo\Marketing\Model\ProductShippingDimensionV3|null
     */
    public function getShippingHeight()
    {
        return $this->container['shipping_height'];
    }

    /**
     * Sets shipping_height
     *
     * @param \Criteo\Marketing\Model\ProductShippingDimensionV3|null $shipping_height shipping_height
     *
     * @return $this
     */
    public function setShippingHeight($shipping_height)
    {
        $this->container['shipping_height'] = $shipping_height;

        return $this;
    }

    /**
     * Gets display_ads_id
     *
     * @return string|null
     */
    public function getDisplayAdsId()
    {
        return $this->container['display_ads_id'];
    }

    /**
     * Sets display_ads_id
     *
     * @param string|null $display_ads_id An identifier for an item for dynamic remarketing campaigns.
     *
     * @return $this
     */
    public function setDisplayAdsId($display_ads_id)
    {
        $this->container['display_ads_id'] = $display_ads_id;

        return $this;
    }

    /**
     * Gets display_ads_similar_ids
     *
     * @return string|null
     */
    public function getDisplayAdsSimilarIds()
    {
        return $this->container['display_ads_similar_ids'];
    }

    /**
     * Sets display_ads_similar_ids
     *
     * @param string|null $display_ads_similar_ids Advertiser-specified recommendations.
     *
     * @return $this
     */
    public function setDisplayAdsSimilarIds($display_ads_similar_ids)
    {
        $this->container['display_ads_similar_ids'] = $display_ads_similar_ids;

        return $this;
    }

    /**
     * Gets display_ads_title
     *
     * @return string|null
     */
    public function getDisplayAdsTitle()
    {
        return $this->container['display_ads_title'];
    }

    /**
     * Sets display_ads_title
     *
     * @param string|null $display_ads_title Title of an item for dynamic remarketing campaigns.
     *
     * @return $this
     */
    public function setDisplayAdsTitle($display_ads_title)
    {
        $this->container['display_ads_title'] = $display_ads_title;

        return $this;
    }

    /**
     * Gets display_ads_link
     *
     * @return string|null
     */
    public function getDisplayAdsLink()
    {
        return $this->container['display_ads_link'];
    }

    /**
     * Sets display_ads_link
     *
     * @param string|null $display_ads_link URL directly to your item's landing page for dynamic remarketing campaigns.
     *
     * @return $this
     */
    public function setDisplayAdsLink($display_ads_link)
    {
        $this->container['display_ads_link'] = $display_ads_link;

        return $this;
    }

    /**
     * Gets display_ads_value
     *
     * @return double|null
     */
    public function getDisplayAdsValue()
    {
        return $this->container['display_ads_value'];
    }

    /**
     * Sets display_ads_value
     *
     * @param double|null $display_ads_value Offer margin for dynamic remarketing campaigns.
     *
     * @return $this
     */
    public function setDisplayAdsValue($display_ads_value)
    {
        $this->container['display_ads_value'] = $display_ads_value;

        return $this;
    }

    /**
     * Gets sell_on_google_quantity
     *
     * @return string|null
     */
    public function getSellOnGoogleQuantity()
    {
        return $this->container['sell_on_google_quantity'];
    }

    /**
     * Sets sell_on_google_quantity
     *
     * @param string|null $sell_on_google_quantity The quantity of the product that is available for selling on Google. Supported only for online products.
     *
     * @return $this
     */
    public function setSellOnGoogleQuantity($sell_on_google_quantity)
    {
        $this->container['sell_on_google_quantity'] = $sell_on_google_quantity;

        return $this;
    }

    /**
     * Gets promotion_ids
     *
     * @return string[]|null
     */
    public function getPromotionIds()
    {
        return $this->container['promotion_ids'];
    }

    /**
     * Sets promotion_ids
     *
     * @param string[]|null $promotion_ids The unique ID of a promotion.
     *
     * @return $this
     */
    public function setPromotionIds($promotion_ids)
    {
        $this->container['promotion_ids'] = $promotion_ids;

        return $this;
    }

    /**
     * Gets max_handling_time
     *
     * @return string|null
     */
    public function getMaxHandlingTime()
    {
        return $this->container['max_handling_time'];
    }

    /**
     * Sets max_handling_time
     *
     * @param string|null $max_handling_time Maximal product handling time (in business days).
     *
     * @return $this
     */
    public function setMaxHandlingTime($max_handling_time)
    {
        $this->container['max_handling_time'] = $max_handling_time;

        return $this;
    }

    /**
     * Gets min_handling_time
     *
     * @return string|null
     */
    public function getMinHandlingTime()
    {
        return $this->container['min_handling_time'];
    }

    /**
     * Sets min_handling_time
     *
     * @param string|null $min_handling_time Minimal product handling time (in business days).
     *
     * @return $this
     */
    public function setMinHandlingTime($min_handling_time)
    {
        $this->container['min_handling_time'] = $min_handling_time;

        return $this;
    }

    /**
     * Gets cost_of_goods_sold
     *
     * @return \Criteo\Marketing\Model\Price|null
     */
    public function getCostOfGoodsSold()
    {
        return $this->container['cost_of_goods_sold'];
    }

    /**
     * Sets cost_of_goods_sold
     *
     * @param \Criteo\Marketing\Model\Price|null $cost_of_goods_sold cost_of_goods_sold
     *
     * @return $this
     */
    public function setCostOfGoodsSold($cost_of_goods_sold)
    {
        $this->container['cost_of_goods_sold'] = $cost_of_goods_sold;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string|null
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string|null $source The source of the offer, i.e., how the offer was created.
     *
     * @return $this
     */
    public function setSource($source)
    {
        $allowedValues = $this->getSourceAllowableValues();
        if (!is_null($source) && !in_array($source, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'source', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets included_destinations
     *
     * @return string[]|null
     */
    public function getIncludedDestinations()
    {
        return $this->container['included_destinations'];
    }

    /**
     * Sets included_destinations
     *
     * @param string[]|null $included_destinations The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in excludedDestinations.
     *
     * @return $this
     */
    public function setIncludedDestinations($included_destinations)
    {
        $this->container['included_destinations'] = $included_destinations;

        return $this;
    }

    /**
     * Gets excluded_destinations
     *
     * @return string[]|null
     */
    public function getExcludedDestinations()
    {
        return $this->container['excluded_destinations'];
    }

    /**
     * Sets excluded_destinations
     *
     * @param string[]|null $excluded_destinations The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).
     *
     * @return $this
     */
    public function setExcludedDestinations($excluded_destinations)
    {
        $this->container['excluded_destinations'] = $excluded_destinations;

        return $this;
    }

    /**
     * Gets ads_grouping
     *
     * @return string|null
     */
    public function getAdsGrouping()
    {
        return $this->container['ads_grouping'];
    }

    /**
     * Sets ads_grouping
     *
     * @param string|null $ads_grouping Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.
     *
     * @return $this
     */
    public function setAdsGrouping($ads_grouping)
    {
        $this->container['ads_grouping'] = $ads_grouping;

        return $this;
    }

    /**
     * Gets ads_labels
     *
     * @return string[]|null
     */
    public function getAdsLabels()
    {
        return $this->container['ads_labels'];
    }

    /**
     * Sets ads_labels
     *
     * @param string[]|null $ads_labels Similar to adsGrouping, but only works on CPC.
     *
     * @return $this
     */
    public function setAdsLabels($ads_labels)
    {
        $this->container['ads_labels'] = $ads_labels;

        return $this;
    }

    /**
     * Gets ads_redirect
     *
     * @return string|null
     */
    public function getAdsRedirect()
    {
        return $this->container['ads_redirect'];
    }

    /**
     * Sets ads_redirect
     *
     * @param string|null $ads_redirect Allows advertisers to override the item URL when the product is shown within the context of Product Ads.
     *
     * @return $this
     */
    public function setAdsRedirect($ads_redirect)
    {
        $this->container['ads_redirect'] = $ads_redirect;

        return $this;
    }

    /**
     * Gets product_types
     *
     * @return string[]|null
     */
    public function getProductTypes()
    {
        return $this->container['product_types'];
    }

    /**
     * Sets product_types
     *
     * @param string[]|null $product_types Categories of the item (formatted as in products data specification).
     *
     * @return $this
     */
    public function setProductTypes($product_types)
    {
        $this->container['product_types'] = $product_types;

        return $this;
    }

    /**
     * Gets age_group
     *
     * @return string|null
     */
    public function getAgeGroup()
    {
        return $this->container['age_group'];
    }

    /**
     * Sets age_group
     *
     * @param string|null $age_group Target age group of the item.
     *
     * @return $this
     */
    public function setAgeGroup($age_group)
    {
        $this->container['age_group'] = $age_group;

        return $this;
    }

    /**
     * Gets availability
     *
     * @return string|null
     */
    public function getAvailability()
    {
        return $this->container['availability'];
    }

    /**
     * Sets availability
     *
     * @param string|null $availability Availability status of the item.
     *
     * @return $this
     */
    public function setAvailability($availability)
    {
        $this->container['availability'] = $availability;

        return $this;
    }

    /**
     * Gets condition
     *
     * @return string|null
     */
    public function getCondition()
    {
        return $this->container['condition'];
    }

    /**
     * Sets condition
     *
     * @param string|null $condition Condition or state of the item.
     *
     * @return $this
     */
    public function setCondition($condition)
    {
        $this->container['condition'] = $condition;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string|null
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string|null $gender Target gender of the item.
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets size_system
     *
     * @return string|null
     */
    public function getSizeSystem()
    {
        return $this->container['size_system'];
    }

    /**
     * Sets size_system
     *
     * @param string|null $size_system System in which the size is specified. Recommended for apparel items.
     *
     * @return $this
     */
    public function setSizeSystem($size_system)
    {
        $this->container['size_system'] = $size_system;

        return $this;
    }

    /**
     * Gets size_type
     *
     * @return string|null
     */
    public function getSizeType()
    {
        return $this->container['size_type'];
    }

    /**
     * Sets size_type
     *
     * @param string|null $size_type The cut of the item. Recommended for apparel items.
     *
     * @return $this
     */
    public function setSizeType($size_type)
    {
        $this->container['size_type'] = $size_type;

        return $this;
    }

    /**
     * Gets energy_efficiency_class
     *
     * @return string|null
     */
    public function getEnergyEfficiencyClass()
    {
        return $this->container['energy_efficiency_class'];
    }

    /**
     * Sets energy_efficiency_class
     *
     * @param string|null $energy_efficiency_class The energy efficiency class as defined in EU directive 2010/30/EU.
     *
     * @return $this
     */
    public function setEnergyEfficiencyClass($energy_efficiency_class)
    {
        $this->container['energy_efficiency_class'] = $energy_efficiency_class;

        return $this;
    }

    /**
     * Gets min_energy_efficiency_class
     *
     * @return string|null
     */
    public function getMinEnergyEfficiencyClass()
    {
        return $this->container['min_energy_efficiency_class'];
    }

    /**
     * Sets min_energy_efficiency_class
     *
     * @param string|null $min_energy_efficiency_class The energy efficiency class as defined in EU directive 2010/30/EU.
     *
     * @return $this
     */
    public function setMinEnergyEfficiencyClass($min_energy_efficiency_class)
    {
        $this->container['min_energy_efficiency_class'] = $min_energy_efficiency_class;

        return $this;
    }

    /**
     * Gets max_energy_efficiency_class
     *
     * @return string|null
     */
    public function getMaxEnergyEfficiencyClass()
    {
        return $this->container['max_energy_efficiency_class'];
    }

    /**
     * Sets max_energy_efficiency_class
     *
     * @param string|null $max_energy_efficiency_class The energy efficiency class as defined in EU directive 2010/30/EU.
     *
     * @return $this
     */
    public function setMaxEnergyEfficiencyClass($max_energy_efficiency_class)
    {
        $this->container['max_energy_efficiency_class'] = $max_energy_efficiency_class;

        return $this;
    }

    /**
     * Gets tax_category
     *
     * @return string|null
     */
    public function getTaxCategory()
    {
        return $this->container['tax_category'];
    }

    /**
     * Sets tax_category
     *
     * @param string|null $tax_category The tax category of the product, used to configure detailed tax nexus in account-level tax settings.
     *
     * @return $this
     */
    public function setTaxCategory($tax_category)
    {
        $this->container['tax_category'] = $tax_category;

        return $this;
    }

    /**
     * Gets transit_time_label
     *
     * @return string|null
     */
    public function getTransitTimeLabel()
    {
        return $this->container['transit_time_label'];
    }

    /**
     * Sets transit_time_label
     *
     * @param string|null $transit_time_label The transit time label of the product, used to group product in account-level transit time tables.
     *
     * @return $this
     */
    public function setTransitTimeLabel($transit_time_label)
    {
        $this->container['transit_time_label'] = $transit_time_label;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


